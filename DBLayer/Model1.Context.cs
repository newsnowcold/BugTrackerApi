//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BugTrackerEntities : DbContext
    {
        public BugTrackerEntities()
            : base("name=BugTrackerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<IssueAssignment> IssueAssignments { get; set; }
        public virtual DbSet<Issue> Issues { get; set; }
        public virtual DbSet<ProjectAccess> ProjectAccesses { get; set; }
        public virtual DbSet<ProjectAccessType> ProjectAccessTypes { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<TimeLog> TimeLogs { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<IssueStatus> IssueStatuses { get; set; }
        public virtual DbSet<PriorityType> PriorityTypes { get; set; }
    
        public virtual ObjectResult<GET_list_projects_Result> GET_list_projects(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_list_projects_Result>("GET_list_projects", userIdParameter);
        }
    
        public virtual ObjectResult<GET_list_issues_Result> GET_list_issues(Nullable<int> userId, Nullable<int> projectId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_list_issues_Result>("GET_list_issues", userIdParameter, projectIdParameter);
        }
    }
}
